// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "Vestislabs",
        "contact": {
            "name": "Jefri Herdi Triyanto",
            "url": "https://www.vestislabs.com/",
            "email": "jefriherditriyanto@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/download/{filename}/": {
            "get": {
                "description": "Download a file by filename",
                "produces": [
                    "application/octet-stream"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/src.JSONResponse"
                        }
                    }
                }
            }
        },
        "/v1/uploader/": {
            "post": {
                "description": "Uploads a video, converts it, and then sends back the converted video.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "video/mp4"
                ],
                "tags": [
                    "Video"
                ],
                "summary": "Upload and Convert Video",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Video file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Converted video file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/src.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/src.JSONResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "src.JSONResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                },
                "StatusCode": {
                    "type": "integer"
                },
                "Success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Vestislabs HTTP2 Uploader",
	Description:      "This is an API for example create stream video after upload & convert",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
